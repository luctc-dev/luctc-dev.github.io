{"version":3,"file":"229.24db8213.iframe.bundle.js","mappings":";;;;;;;;;;AA+CA;;;;;;;;;;AAUA;AAyBA;;;;;;;;;AASA;AAGA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;;;;;AAOA;;;;;;AAMA;;;;;AAOA;;;;;;AAMA;;;;;AAOA;;AAIA;;;AAKA;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrMA;;;;;;;;;;;;;;;;;;;;;;AC3CA;;;AAGA;;;;;;;AASA;;;;AAIA;AACA;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;AChBA;;;;;;;;AAUA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;;;;;;;;;;;;;;AChFA;;AAaA;;AClBA;;;;;;;;;;;;;;;;;;;;;;;;ACwBA;;;;;;;;;;;;;;AAgBA;ACtDA;ACeA;;;;;;;;;;;;;;AAgGA;;;;;;;;;;;ACxFA;;;;;;;;;;;;;;;;;;;;;;ACGA;;;;;;;;;;;;;;;AAiBA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;AAwBA;;;;;;AAQA;;;;AAMA;;;;;;;;;;;;;;;;AC9DA;;;ACjBA;;;;;;;AASA;;;;AAIA;AACA;;;;;;;;;;;AAaA;;;;;;;;ACtBA;AAGA","sources":["webpack://@luctc/template-builder/./src/components/TemplateBuilder/index.styled.ts","webpack://@luctc/template-builder/./src/components/TemplateBuilder/colStructure/index.styled.ts","webpack://@luctc/template-builder/./src/components/TemplateBuilder/colStructure/ColModuleEmpty.tsx","webpack://@luctc/template-builder/./src/components/TemplateBuilder/moduleItem/index.styled.ts","webpack://@luctc/template-builder/./src/components/TemplateBuilder/modules/Divider/index.tsx","webpack://@luctc/template-builder/./src/components/TemplateBuilder/modules/Spacer/index.tsx","webpack://@luctc/template-builder/./src/components/TemplateBuilder/modules/Image/index.tsx","webpack://@luctc/template-builder/./src/components/TemplateBuilder/modules/LeadForm/leadCss.js","webpack://@luctc/template-builder/./src/components/TemplateBuilder/modules/LeadForm/index.tsx","webpack://@luctc/template-builder/./src/components/TemplateBuilder/modules/Social/index.tsx","webpack://@luctc/template-builder/./src/components/TemplateBuilder/rowDraggable/index.styled.ts","webpack://@luctc/template-builder/./src/components/TemplateBuilder/rowDraggable/RowDraggableView.tsx","webpack://@luctc/template-builder/./src/components/TemplateBuilder/rowDraggable/RowEmpty.tsx","webpack://@luctc/template-builder/./src/components/TemplateBuilder/settingGlobalTab/SettingGlobalTab.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Tabs } from 'antd';\nimport { desktop } from '../../styles/utils';\nimport IconBlock from '../atoms/iconBlock';\nimport ColumnBlock from '../atoms/columnBlock';\n\nexport const StyledScrollBars = `\n  > [data-rbd-droppable-id='all-rows'] {\n    min-height: 100%;\n  }\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    height: 6px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 6px;\n    background-color: rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  position: relative;\n\n  height: 100%;\n  // background-color: #eee;\n\n  font-family: 'Open Sans', sans-serif;\n`;\n\ntype StyledContentProps = {\n  $bodyContentComputedStyle: {\n    align: string;\n    linkColor: string;\n    messageWidth: string;\n    messageBackgroundColor: string;\n  };\n};\n\nexport const StyledContent = styled.div<StyledContentProps>`\n  transition: all 0.15s;\n  padding: 0;\n  width: 100%; // Todo with mobile and desktop mode\n  min-height: 100%;\n\n  > [data-rbd-droppable-id='all-rows'] {\n    min-height: 90vh;\n  }\n\n  ${(props) => {\n    const computed = props.$bodyContentComputedStyle;\n    const width = computed.messageWidth\n      ? `\n    .setting_messageWidth {\n      width: ${computed.messageWidth} !important;\n    }`\n      : '';\n    const align = computed.align === 'left' ? '.setting_contentAlign { margin-left: 0; }' : '';\n    const linkColor = `\n      a {\n        color: ${computed.linkColor}\n      }\n    `;\n    const bgColor = computed.messageBackgroundColor\n      ? `\n    .setting_messageBgColor {\n      background-color: ${computed.messageBackgroundColor};\n    }`\n      : '';\n\n    return `${width}${align}${linkColor}${bgColor}`;\n  }}\n`;\n\nexport const StyledContentWrap = styled.div`\n  display: flex;\n  flex: 1 1;\n  overflow-y: overlay;\n  padding: 20px 20px 20px 20px;\n  max-height: 100%;\n  align-items: flex-start;\n  border-right: 1px solid #ccc;\n\n  ${StyledScrollBars}\n`;\n\nexport const StyledWrapAllRows = styled.div`\n  width: 100%;\n`;\n\nexport const StyledSidebar = styled.div`\n  width: 20px;\n  display: flex;\n  height: 100%;\n  text-align: left;\n  background: #f9f9f9;\n  color: #8f9699;\n  transition: all 0.15s;\n  position: relative;\n\n  .sidebar-hide {\n    top: 10px;\n    left: -16px;\n    z-index: 1;\n    position: absolute;\n    opacity: 0;\n    transition: all 0.15s;\n  }\n\n  &[data-show='false'] {\n    & > .ant-tabs {\n      opacity: 0;\n    }\n    .sidebar-hide {\n      opacity: 1;\n    }\n    &:hover {\n      width: 30px;\n    }\n  }\n\n  &[data-show='true'] {\n    width: 411px;\n    .sidebar-hide > svg {\n      transform: rotateY(180deg);\n    }\n    &:hover {\n      .sidebar-hide {\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nexport const StyledTabs = styled(Tabs)`\n  width: 100%;\n\n  &.ant-tabs-top > .ant-tabs-nav {\n    margin-bottom: 0;\n\n    &::before {\n      content: none;\n    }\n    .ant-tabs-tab {\n      width: 33.333%;\n      background: #d6d9dc;\n      justify-content: center;\n      border-radius: 0;\n      border-color: #c7c7c7;\n      padding: 13px 16px 12px;\n      font-size: 13px;\n      text-transform: uppercase;\n\n      & + .ant-tabs-tab {\n        margin-left: 0;\n      }\n      &.ant-tabs-tab-active {\n        background: #f9f9f9;\n        border-left-color: transparent;\n        border-right-color: transparent;\n        border-bottom-color: transparent;\n\n        .ant-tabs-tab-btn {\n          color: #516167;\n        }\n      }\n    }\n\n    .ant-tabs-nav-list {\n      width: 100%;\n    }\n  }\n\n  .ant-tabs-content {\n    height: 100%;\n    max-height: 100%;\n  }\n\n  ${desktop} {\n    .ant-tabs-nav-operations {\n      display: none !important;\n    }\n  }\n`;\n\nexport const StyledTabContent = styled.div`\n  padding: 16px;\n  max-height: 100%;\n  overflow: overlay;\n  height: 100%;\n\n  ${StyledScrollBars}\n\n  &[data-if='false'] {\n    display: none;\n  }\n`;\n\nexport const StyledTabContentSetting = styled.div`\n  padding-top: 16px;\n  max-height: 100%;\n  overflow: overlay;\n  height: 100%;\n\n  ${StyledScrollBars}\n\n  &[data-if='false'] {\n    display: none;\n  }\n`;\n\nexport const StyledIconBlock = styled(IconBlock)`\n  flex: 1;\n`;\n\nexport const StyledColumnBlock = styled(ColumnBlock)`\n  margin-bottom: 15px;\n  background-color: #fff;\n`;\n\nexport const StyledListModule = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  > div {\n    width: calc(33.33% - 11px);\n\n    // To void layout glitch. Override the transform value of react-beautiful-dnd\n    transform: none !important;\n  }\n\n  .hide {\n    display: none;\n  }\n`;\n\nexport const StyledListColPlaceholder = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  > div {\n    // To void layout glitch. Override the transform value of react-beautiful-dnd\n    transform: none !important;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledColWrapper = styled.div`\n  border: 2px solid transparent;\n  flex-grow: 1;\n\n  &.hhg-col-1 {\n    width: 8.3333333%;\n  }\n  &.hhg-col-2 {\n    width: 16.6666666%;\n  }\n  &.hhg-col-3 {\n    width: 25%;\n  }\n  &.hhg-col-4 {\n    width: 33.33333333%;\n  }\n  &.hhg-col-5 {\n    width: 41.66666667%;\n  }\n  &.hhg-col-6 {\n    width: 50%;\n  }\n  &.hhg-col-7 {\n    width: 58.33333333%;\n  }\n  &.hhg-col-8 {\n    width: 66.6666666%;\n  }\n  &.hhg-col-9 {\n    width: 66.6666666%;\n  }\n  &.hhg-col-10 {\n    width: 83.33333333%;\n  }\n  &.hhg-col-11 {\n    width: 91.66666667%;\n  }\n  &.hhg-col-12 {\n    width: 100%;\n  }\n\n  .hide {\n    display: none;\n  }\n`;\n\nexport const StyledModuleList = styled.div`\n  position: relative;\n  height: 100%;\n\n  &::after {\n    content: '';\n    opacity: 0;\n    top: 0;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    outline: 2px solid #2d87f3;\n    outline-offset: -1px;\n    z-index: 2;\n    pointer-events: none;\n    transition: all 0.15s;\n  }\n  &[data-dragging-over='true']::after {\n    opacity: 1;\n    background-color: rgba(45, 135, 243, 0.15);\n  }\n`;\n","import { ThemeProps } from 'components/providers/theme';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Icon from '../../atoms/icons/Icon';\n\nconst StyledText = styled.p`\n  font-size: 12px;\n  margin: 5px 0 0 0;\n  color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  text-align: center;\n  white-space: nowrap;\n  max-width: 100%;\n  padding: 0 5px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst StyledColModuleEmpty = styled.div`\n  height: 100%;\n  width: 100%;\n  min-height: 75px;\n  color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  outline: 1px dashed ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  background: rgb(45 135 243 / 20%);\n  outline-offset: -1px;\n  word-break: break-word;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  lex-direction: column;\n  flex-direction: column;\n  position: relative;\n  border-radius: 4px;\n`;\n\ntype Props = {\n  rowId?: string;\n  columnId?: string;\n};\n\nfunction ColModuleEmpty({ columnId }: Props) {\n  return (\n    <StyledColModuleEmpty>\n      <Icon name=\"UpCircleSolid\" />\n      <StyledText>Drop content blocks here</StyledText>\n      {/* <span>Col: {columnId}</span> */}\n    </StyledColModuleEmpty>\n  );\n}\n\nexport { ColModuleEmpty };\n","import styled from 'styled-components';\nimport { ThemeProps } from '../../providers/theme';\n\nexport const Container = styled.div`\n  position: relative;\n  transition: all 0.15s;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    pointer-events: none;\n    outline: 2px solid transparent;\n    outline-offset: -2px;\n    z-index: 1;\n    transition: all 0.15s;\n  }\n\n  &.module--hovered,\n  &.module--selected {\n    &::before {\n      outline-color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n    }\n\n    .tcl-drag-column-start &,\n    .tcl-drag-control-start & {\n      outline-color: transparent !important;\n    }\n  }\n`;\n\nexport const StyledModuleMove = styled.div`\n  position: absolute;\n  color: #fff;\n  background-color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  right: -16px;\n  top: calc(50% - 16px);\n  border-radius: 20px;\n  pointer-events: none;\n  transition: all 0.15s;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: grab;\n  z-index: -1;\n  opacity: 0;\n  pointer-events: none;\n\n  &.show {\n    opacity: 1;\n    z-index: 15;\n    pointer-events: auto;\n\n    .tcl-drag-column-start &,\n    .tcl-drag-control-start & {\n      z-index: -1;\n      opacity: 0;\n      pointer-events: none;\n    }\n  }\n`;\n\nexport const StyledListActions = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  display: flex;\n  position: absolute;\n  bottom: -40px;\n  right: -2px;\n  background-color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  box-shadow: 0 2px 6px rgb(0 0 0 / 30%);\n  z-index: 7;\n\n  > li {\n    width: 35px;\n    height: 30px;\n    border-right: 1px solid rgb(255 255 255 / 30%);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n\n    &:last-child {\n      border-right: 0;\n    }\n  }\n\n  svg {\n    color: #fff;\n    display: block;\n  }\n`;\n\nexport const StyledName = styled.span`\n  display: block;\n  position: absolute;\n  bottom: 0;\n  right: -1px;\n  transform: translateY(100%);\n  background-color: #2d87f3;\n  font-size: 12px;\n  color: #fff;\n  padding: 0 5px;\n  z-index: 1;\n  text-transform: capitalize;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { convertStyleToJsx } from '../../utils';\n\nexport type PropsDivider = {\n  moduleBlockStyle: Record<string, string>;\n  moduleStyle: Record<string, string>;\n  computedStyle: Record<string, string>;\n};\n\ntype PropsComputedStyle = {\n  align: 'left' | 'right' | 'center';\n  hideContentOnMobile: 'true' | 'false';\n};\n\nconst StyledWrap = styled.div<{ $computed: PropsComputedStyle }>`\n  font-size: 0;\n\n  > div {\n    ${(props) => {\n      if (props.$computed.align === 'center') {\n        return `margin: 0 auto;`;\n      }\n      if (props.$computed.align === 'right') {\n        return `margin-left: auto;`;\n      }\n\n      return '';\n    }}\n  }\n`;\n\nexport function Divider({\n  moduleBlockStyle, //\n  moduleStyle,\n  computedStyle,\n}: PropsDivider) {\n  const moduleBlockStyleJsx = convertStyleToJsx(moduleBlockStyle);\n  const moduleStyleJsx = convertStyleToJsx(moduleStyle);\n\n  return (\n    <StyledWrap\n      style={moduleBlockStyleJsx} //\n      className=\"module-divider\"\n      $computed={computedStyle as PropsComputedStyle}\n    >\n      <div style={moduleStyleJsx}></div>\n    </StyledWrap>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { convertStyleToJsx } from '../../utils';\n\nexport type PropsDivider = {\n  moduleBlockStyle: Record<string, string>;\n  moduleStyle: Record<string, string>;\n  computedStyle: Record<string, string>; // hideContentOnMobile\n};\n\nconst StyledWrap = styled.div`\n  font-size: 0;\n`;\n\nexport function Spacer({\n  moduleBlockStyle,\n  moduleStyle, //\n  computedStyle,\n}: PropsDivider) {\n  const styleJsx = convertStyleToJsx(moduleStyle);\n  const moduleBlockStyleJsx = convertStyleToJsx(moduleBlockStyle);\n  // const moduleStyleJsx = convertStyleToJsx(moduleStyle);\n\n  return (\n    <div style={moduleBlockStyleJsx}>\n      <StyledWrap\n        style={styleJsx} //\n        className=\"module-spacer\"\n      />\n    </div>\n  );\n}\n","import Icon from '../../../atoms/icons/Icon';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { convertStyleToJsx } from '../../utils';\n\nexport type PropsImage = {\n  moduleBlockStyle: Record<string, string>;\n  moduleStyle: Record<string, string>;\n  computedStyle: Record<string, string>; // hideContentOnMobile\n  imageInfo: Record<string, string>;\n};\n\nconst StyledWrap = styled.div`\n  font-size: 0;\n\n  a,\n  img {\n    max-width: 100%;\n    display: block;\n\n    &.autowidth {\n      width: auto;\n    }\n\n    &.right {\n      margin-left: auto;\n    }\n    &.center {\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n\n  a img {\n    width: 100%;\n  }\n`;\n\nconst StyledPlaceholder = styled.div`\n  background: #f3f3f3;\n  outline: 1px dashed #979797;\n  outline-offset: -2px;\n  display: inline-block;\n  color: #979894;\n  padding: 25px 0;\n  text-align: center;\n  width: 100%;\n\n  p {\n    font-size: 12px;\n    margin: 5px 0 0 0;\n  }\n`;\n\nexport function Image({\n  moduleBlockStyle,\n  moduleStyle, //\n  computedStyle,\n  imageInfo,\n}: PropsImage) {\n  const styleJsx = convertStyleToJsx(moduleStyle);\n  const moduleBlockStyleJsx = convertStyleToJsx(moduleBlockStyle);\n  const [showPlaceholder, setShowPlaceholder] = useState(false);\n\n  useEffect(() => {\n    const src = imageInfo.src;\n    if (src) {\n      const image = document.createElement('img');\n      image.onload = () => {\n        setShowPlaceholder(false);\n      };\n      image.onerror = () => {\n        setShowPlaceholder(true);\n      };\n      image.src = src;\n    } else {\n      setShowPlaceholder(true);\n    }\n  }, [imageInfo.src]);\n  // const moduleStyleJsx = convertStyleToJsx(moduleStyle);\n\n  const renderImage = () => {\n    if (imageInfo.href) {\n      return (\n        <a\n          onClick={(evt) => evt.preventDefault()}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href={imageInfo.href}\n          style={{ width: computedStyle.width }}\n          className={computedStyle.class}\n        >\n          <img src={imageInfo.src} alt={imageInfo.alt} />\n        </a>\n      );\n    }\n\n    return <img src={imageInfo.src} alt={imageInfo.alt} width={computedStyle.width} className={computedStyle.class} />;\n  };\n\n  return (\n    <div style={moduleBlockStyleJsx}>\n      <StyledWrap style={styleJsx}>\n        {showPlaceholder ? (\n          <StyledPlaceholder>\n            <Icon name=\"ImagePlaceholder\" />\n            <p>Add an image from an Url</p>\n          </StyledPlaceholder>\n        ) : (\n          renderImage()\n        )}\n      </StyledWrap>\n    </div>\n  );\n}\n","export const leadCss = `\n  .lead-modal {\n    font-family: 'Open sans', sans-serif !important;\n    position: fixed;\n    z-index: 99999;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    opacity: 1;\n    visibility: visible;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: transparent;\n    padding: 10px;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    white-space: normal !important;\n  }\n\n  .lead-modal__wrapper {\n    position: relative;\n    width: 100%;\n    max-width: 450px;\n    background-color: #fff;\n    border-radius: 6px;\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n\n  .lead-modal__content {\n    width: inherit;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .lead-modal__header {\n    padding: 0px 0px;\n  }\n\n  .lead-modal__image {\n    display: block;\n    margin: 0 auto;\n    border: none !important;\n    box-shadow: none !important;\n  }\n  .lead-modal-image-logo {\n    margin-top: 15px;\n    margin-bottom: 15px;\n  }\n\n  .lead-modal-image-cover {\n    width: 100% !important;\n    padding: 0 0px;\n    border-top-left-radius: 4px;\n    border: none !important;\n    box-shadow: none !important;\n    margin: 0 !important;\n  }\n\n  .lead-modal__image + .lead-modal__image {\n    /* margin-top: 10px; */\n    /* border-radius: 4px; */\n  }\n\n  .lead-modal__body {\n    font-family: 'Open sans', sans-serif !important;\n    padding: 15px 15px 25px 15px;\n  }\n\n  .lead-modal__title {\n    font-family: 'Open sans', sans-serif !important;\n    font-size: 20px !important;\n    font-weight: bold !important;\n    font-stretch: normal !important;\n    font-style: normal !important;\n    line-height: 1.3 !important;\n    letter-spacing: -0.4px !important;\n    color: #2a4975 !important;\n    box-shadow: none !important;\n    padding-bottom: 0 !important;\n  }\n\n  .lead-modal__title.pink {\n    color: #2661ad !important;\n  }\n\n  .lead-modal__description {\n    font-family: 'Open sans', sans-serif !important;\n    font-size: 13px !important;\n    font-weight: normal !important;\n    font-stretch: normal !important;\n    font-style: normal !important;\n    line-height: 1.62 !important;\n    letter-spacing: 0.14px !important;\n    color: #2c87f3 !important;\n    margin-top: 10px !important;\n  }\n\n  .lead-modal__description.pink {\n    color: #3e3f58 !important;\n  }\n\n  .lead-modal__form-control-wrapper {\n    margin-top: 10px;\n    margin-left: 0px !important;\n    position: relative;\n  }\n\n  .lead-modal__form-control {\n    box-shadow: none !important;\n    height: 40px !important;\n    width: 100%;\n    padding-left: calc(15px + 1.5em + 15px) !important;\n    background-color: #fff !important;\n    padding-top: 10px !important;\n    padding-bottom: 10px !important;\n    padding-right: 15px !important;\n    border: solid 1px #dddddd !important;\n    color: #2a4975 !important;\n    line-height: 1.7em !important;\n    border-radius: 0 !important;\n    font-family: 'Open Sans', sans-serif !important;\n    background-image: linear-gradient(transparent, transparent) !important;\n    margin-left: 0px !important;\n    font-size: 14px !important;\n    line-height: 14px !important;\n  }\n\n  .lead-modal__form-control:focus {\n    border-color: var(--color-primary);\n    box-shadow: 0px 0px 0px 3px rgba(44, 135, 243, 0.1);\n    outline: none;\n  }\n\n  .lead-modal__form-control::-webkit-input-placeholder {\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\n    color: #b5b5b5;\n  }\n\n  .lead-modal__form-control::-moz-placeholder {\n    color: #b5b5b5;\n  }\n\n  .lead-modal__form-control:-ms-input-placeholder {\n    color: #b5b5b5;\n  }\n\n  .lead-modal__form-control::-ms-input-placeholder {\n    color: #b5b5b5;\n  }\n\n  .lead-modal__form-control::placeholder {\n    color: #b5b5b5;\n  }\n\n  img.lead-modal__form-control-icon {\n    display: inline-block !important;\n    color: #b5b5b5 !important;\n    fill: #b5b5b5 !important;\n    line-height: 1 !important;\n    flex-shrink: 0 !important;\n    max-width: initial !important;\n    display: block !important;\n    position: absolute !important;\n    pointer-events: none !important;\n    left: 15px !important;\n    top: 10px !important;\n    height: 20px !important;\n    width: 20px !important;\n    border: none !important;\n    margin: 0 !important;\n  }\n\n  .lead-modal__checkbox-wrapper {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    align-items: center;\n    margin-top: 15px;\n  }\n\n  .lead-modal__checkbox-wrapper a {\n    color: #2c87f3 !important;\n    text-decoration: none !important;\n  }\n\n  .lead-modal__checkbox-wrapper a:visited {\n    color: #2c87f3 !important;\n  }\n\n  .lead-modal__checkbox-wrapper.pink a,\n  .lead-modal__checkbox-wrapper.pink a:visited {\n    color: #e55c8a !important;\n  }\n\n  .lead-modal__checkbox {\n    position: relative;\n    z-index: 1;\n    display: inline-block;\n    font-size: 20px;\n  }\n\n  .lead-modal__checkbox__input {\n    position: relative;\n    margin: 0 !important;\n    padding: 0;\n    opacity: 0;\n    height: 1em !important;\n    width: 1em !important;\n    display: block;\n    z-index: 1;\n    font-size: 1em !important;\n  }\n\n  .lead-modal__checkbox__control {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    pointer-events: none;\n    transition: transform 0.2s;\n    color: #dddddd;\n  }\n\n  .lead-modal__checkbox__control::before,\n  .lead-modal__checkbox__control::after {\n    content: '';\n    position: absolute;\n  }\n\n  .lead-modal__checkbox__control::before {\n    width: 120%;\n    height: 120%;\n    background-color: currentColor;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%) scale(0);\n    opacity: 0;\n    border-radius: 50%;\n    will-change: transform;\n    transition: transform 0.2s;\n  }\n\n  .lead-modal__checkbox__control::after {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    border-radius: 6px;\n    -webkit-box-shadow: inset 0 0 0 1px #dddddd;\n    box-shadow: inset 0 0 0 1px #dddddd;\n  }\n\n  .lead-modal__checkbox__control:focus::after {\n    box-shadow: inset 0 0 0 1px #2c87f3;\n  }\n\n  .lead-modal__checkbox__input:checked ~ .lead-modal__checkbox__control::after,\n  .lead-modal__checkbox__input:indeterminate ~ .lead-modal__checkbox__control::after {\n    background-color: currentColor;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: 18px;\n    box-shadow: none;\n  }\n\n  .lead-modal__checkbox__input:checked ~ .lead-modal__checkbox__control {\n    color: #2c87f3;\n  }\n\n  .lead-modal__checkbox__input:checked ~ .lead-modal__checkbox__control::after {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpolyline points='2.5 8 6.5 12 13.5 3' fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5'/%3E%3C/svg%3E\");\n  }\n\n  .lead-modal__checkbox__input:indeterminate ~ .lead-modal__checkbox__control {\n    color: var(--custom-checkbox-color-disabled);\n  }\n\n  .lead-modal__checkbox__input:indeterminate ~ .lead-modal__checkbox__control::after {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cline x1='2' y1='8' x2='14' y2='8' fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'/%3E%3C/svg%3E\");\n  }\n\n  .lead-modal__checkbox__input:active ~ .lead-modal__checkbox__control {\n    transform: scale(0.9);\n  }\n\n  .lead-modal__checkbox__input:checked:active ~ .lead-modal__checkbox__control,\n  .lead-modal__checkbox__input:indeterminate:active ~ .lead-modal__checkbox__control {\n    transform: scale(1);\n  }\n\n  .lead-modal__checkbox__input:focus ~ .lead-modal__checkbox__control::before {\n    opacity: 0.2;\n    transform: translate(-50%, -50%) scale(1);\n  }\n\n  .lead-modal__checkbox__input.pink ~ .lead-modal__checkbox__control::after {\n    border-radius: 50% !important;\n  }\n\n  .lead-modal__checkbox__input.pink:checked ~ .lead-modal__checkbox__control {\n    color: #2661ad;\n  }\n\n  .lead-modal__checkbox__input.pink:checked ~ .lead-modal__checkbox__control::after,\n  .lead-modal__checkbox__input.pink:indeterminate ~ .lead-modal__checkbox__control::after {\n    background-size: 12px;\n  }\n\n  .lead-modal__checkbox__label {\n    /* font-family: OpenSans; */\n    font-size: 13px;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: 0.14px;\n    color: #969696;\n    margin-left: 10px;\n    margin-bottom: 0 !important;\n  }\n\n  .lead-modal__btn {\n    display: block;\n    width: 100%;\n    border: none;\n    color: #fff;\n    padding: 12px 10px;\n    font-weight: 700;\n    text-align: center;\n    margin-top: 15px;\n    border-radius: 4px;\n    background-color: #2699fb;\n    transition: all 0.2s ease-in-out;\n    text-shadow: none !important;\n    box-shadow: none !important;\n    font-family: 'Open sans', sans-serif !important;\n    font-size: 14px;\n    cursor: pointer !important;\n  }\n\n  .lead-modal__btn:hover,\n  .lead-modal__btn:active {\n    background-color: #337eff;\n  }\n\n  .lead-modal__btn.pink {\n    background-color: #e55c8a;\n  }\n\n  .lead-modal__btn.pink:hover {\n    background-color: #b4466a;\n  }\n\n  .lead-modal__close-btn {\n    position: absolute;\n    padding-top: 5px;\n    top: -15px;\n    right: -10px;\n    width: 35px;\n    height: 35px;\n    box-shadow: -2px 4px 4px 0 rgba(191, 191, 191, 0.44) !important;\n    text-shadow: none !important;\n    background-color: #005cfd;\n    border-radius: 50%;\n    line-height: inherit;\n    appearance: none;\n    border: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: all 0.2s ease-in-out;\n    outline: none;\n    z-index: 1;\n    padding: 5px 13px !important;\n    cursor: pointer !important;\n  }\n\n  .lead-modal__close-btn:hover,\n  .lead-modal__close-btn:active {\n    background-color: #337eff;\n  }\n\n  .lead-modal__close-icon {\n    display: inline-block;\n    color: #fff;\n    fill: #fff;\n    height: 1em;\n    width: 1em;\n    line-height: 1;\n    flex-shrink: 0;\n    max-width: initial;\n    transition: 0.3s all ease;\n  }\n\n  .lead-modal__close-btn.pink {\n    background-color: #fff;\n  }\n\n  .lead-modal__close-btn.pink .lead-modal__close-icon {\n    color: #000;\n  }\n\n  .lead-modal__close-btn.pink:hover .lead-modal__close-icon {\n    color: #e55c8a;\n    transition: 0.3s all ease;\n  }\n\n  .lead-modal__thank-you {\n    padding: 0 15px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: inherit;\n    text-align: center;\n    min-height: 400px;\n  }\n\n  .lead-modal__thank-you h1 {\n    margin-top: 10px;\n    font-size: 32px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: -0.23px;\n    color: #1b3250;\n  }\n\n  .lead-modal__thank-you p {\n    margin-top: 5px;\n    font-size: 16px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: normal;\n    letter-spacing: -0.11px;\n    color: #1b3250;\n  }\n  .lead-modal__thank-you img {\n    max-width: 100% !important;\n    border: none !important;\n    width: auto !important;\n    margin: 0 auto !important;\n  }\n\n  .lead-modal__thank-you.hidden {\n    display: none;\n  }\n  /* lead-modal : end */\n\n  .modal__container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: 1000000000000;\n    pointer-events: none;\n    overflow-y: scroll;\n  }\n\n  .modal__content {\n    position: relative;\n    width: 80vw;\n    margin: auto 0;\n  }\n\n  /* Make clicks pass-through */\n  #nprogress {\n    pointer-events: none;\n  }\n\n  #nprogress .bar {\n    background: #223bdd;\n\n    position: fixed;\n    z-index: 1031;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 2px;\n  }\n\n  /* Fancy blur effect */\n  #nprogress .peg {\n    display: block;\n    position: absolute;\n    right: 0px;\n    width: 100px;\n    height: 100%;\n    box-shadow: 0 0 10px #29d, 0 0 5px #29d;\n    opacity: 1;\n    transform: rotate(3deg) translate(0px, -4px);\n  }\n\n  /* Remove these to get rid of the spinner */\n  #nprogress .spinner {\n    display: block;\n    position: fixed;\n    z-index: 1031;\n    top: 15px;\n    right: 15px;\n  }\n\n  #nprogress .spinner-icon {\n    width: 18px;\n    height: 18px;\n    box-sizing: border-box;\n\n    border: solid 2px transparent;\n    border-top-color: #29d;\n    border-left-color: #29d;\n    border-radius: 50%;\n\n    -webkit-animation: nprogress-spinner 400ms linear infinite;\n    animation: nprogress-spinner 400ms linear infinite;\n  }\n\n  .nprogress-custom-parent {\n    overflow: hidden;\n    position: relative;\n  }\n\n  .nprogress-custom-parent #nprogress .spinner,\n  .nprogress-custom-parent #nprogress .bar {\n    position: absolute;\n  }\n\n  @-webkit-keyframes nprogress-spinner {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes nprogress-spinner {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  .lead-modal__btn:disabled {\n    background: #d5d5d5 !important;\n  }\n\n  .dateclass {\n    width: 100%;\n  }\n\n  .dateclass.placeholderclass::before {\n    width: 100%;\n    content: attr(placeholder);\n    color: #b8b8b8;\n  }\n\n  .dateclass.placeholderclass:hover::before {\n    width: 0%;\n    content: '';\n  }\n\n  /* Change Autocomplete styles in Chrome*/\n  .lead-modal input:-webkit-autofill,\n  .lead-modal input:-webkit-autofill:hover,\n  .lead-modal input:-webkit-autofill:focus,\n  .lead-modal textarea:-webkit-autofill,\n  .lead-modal textarea:-webkit-autofill:hover,\n  .lead-modal textarea:-webkit-autofill:focus,\n  .lead-modal select:-webkit-autofill,\n  .lead-modal select:-webkit-autofill:hover,\n  .lead-modal select:-webkit-autofill:focus {\n    -webkit-box-shadow: 0 0 0 1000px white inset !important;\n    -webkit-text-fill-color: #2a4975;\n  }\n\n  .lead-modal label.error {\n    font-size: 13px;\n    color: #fa140f;\n    margin-bottom: 0;\n    margin-left: 0px !important;\n    line-height: 1.65 !important;\n    width: 100%;\n    display: block;\n  }\n\n  .le-text-align-center {\n    text-align: center !important;\n  }\n  .le-text-align-left {\n    text-align: left !important;\n  }\n  .le-text-align-right {\n    text-align: right !important;\n  }\n\n  .le-only-desktop {\n    display: none !important;\n  }\n  .le-only-mobile {\n    display: block !important;\n  }\n\n  .le-only-desktop a {\n    text-decoration: none !important;\n  }\n\n  .le-only-mobile a {\n    text-decoration: none !important;\n  }\n\n  @media screen and (min-width: 992px) {\n    .le-newbuilder-LightBoxB,\n    .le-newbuilder-InlineB {\n      display: flex !important;\n    }\n\n    .le-newbuilder-LightBoxB .lead-modal__header,\n    .le-newbuilder-InlineB .lead-modal__header {\n      max-width: 50%;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .le-only-desktop {\n      display: block !important;\n    }\n\n    .le-only-mobile {\n      display: none !important;\n    }\n\n    .le-newbuilder-LightBoxB .lead-modal__body,\n    .le-newbuilder-InlineB .lead-modal__body {\n      flex: 1;\n    }\n\n    .le-newbuilder-wrap-LightBoxB {\n      max-width: 720px !important;\n    }\n    .le-newbuilder-wrap-InlineB {\n      max-width: 100% !important;\n    }\n    .le-newbuilder-LightBoxB .le-only-desktop.lead-modal-image-cover {\n      max-width: 400px !important;\n    }\n  }\n\n  .lead-modal__title {\n    margin: 7px 0 !important;\n  }\n\n  .lead-modal__description {\n    margin: 0;\n  }\n\n  .lead-modal-image-cover,\n  .lead-modal__wrapper {\n    border-radius: 0px !important;\n  }\n\n  .lead-modal__form {\n    margin: 0;\n    display: block !important;\n  }\n\n  .lead-modal__image + .lead-modal__image {\n    margin-top: 0px;\n  }\n\n  .lead-modal__thank-you {\n    width: 100%;\n  }\n\n  /* Skins */\n  .le-skin-a-desktop {\n    position: fixed;\n    z-index: 99999;\n    top: 0;\n    left: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n  }\n\n  .le-skin-b-desktop {\n  }\n\n  .le-join-now {\n  }\n\n  .le-joinbow-btn {\n    background: #2c87f3;\n    color: #ffffff;\n    font-size: 16px;\n    text-align: center;\n    outline: none !important;\n    box-shadow: none !important;\n    padding: 12px 30px;\n    border: none !important;\n    border: 1px solid transparent !important;\n    cursor: pointer !important;\n  }\n  .le-joinbow-btn:hover {\n    border: 1px solid white !important;\n  }\n\n  .le-joinbow-btn-mobile {\n    background: #2c87f3;\n    color: #ffffff;\n    font-size: 14px;\n    text-align: center;\n    outline: none !important;\n    box-shadow: none !important;\n    padding: 12px 30px;\n    border: none !important;\n  }\n\n  .le-newbuilder-close-svg {\n    border-radius: 50%;\n    width: 35px;\n    height: 35px;\n    background: #005cfd;\n    cursor: pointer !important;\n  }\n  .le-mobile-btn {\n    width: 24px;\n    height: 24px;\n  }\n\n  .le-newbuilder-close-button {\n    padding: 0;\n    background: transparent;\n    box-shadow: none;\n    border: none;\n    width: auto !important;\n    cursor: pointer !important;\n  }\n  .le-abs-top-right {\n    position: absolute;\n    right: 10px;\n    top: 10px;\n  }\n\n  .le-abs-outer-top-right {\n    position: absolute;\n    right: 0px;\n    top: -45px;\n  }\n\n  /* Skin floating */\n  .le-floating-desktop {\n    position: fixed;\n    bottom: 40px;\n    left: 25px;\n    z-index: 9999;\n  }\n\n  .le-floating-desktop-wrap {\n    background: #fff;\n    backdrop-filter: blur(30px);\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.4);\n    padding: 0px;\n    padding-right: 30px;\n    border-radius: 5px;\n    display: flex;\n    align-items: center;\n  }\n\n  .le-floating-desktop-title {\n    font-size: 20px;\n    font-weight: bold;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: 1.5;\n    letter-spacing: normal;\n    color: #2a4975;\n    max-width: 530px;\n  }\n  .le-floating-desktop-desc {\n    font-size: 13px;\n    font-weight: normal;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: 1.65;\n    letter-spacing: normal;\n    color: #2699fb;\n    max-width: 530px;\n  }\n\n  .le-joinbow-floating-btn {\n    background: #2c87f3;\n    color: #ffffff;\n    font-size: 14px;\n    text-align: center;\n    outline: none !important;\n    box-shadow: none !important;\n    padding: 12px 40px;\n    border: none !important;\n    border: 1px solid transparent !important;\n    font-weight: 500;\n    cursor: pointer !important;\n  }\n\n  /* // Floating mobile */\n  .le-floating-mobile {\n    position: fixed;\n    bottom: 0px;\n    left: 0px;\n    width: 100%;\n    z-index: 9999;\n  }\n  .le-abs-outer-mobile-top-right {\n    position: absolute;\n    right: 2px;\n    top: -30px;\n  }\n\n  .le-floating-mobile-wrap {\n    background: #fff;\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.4);\n    padding: 10px 15px;\n  }\n  .le-floating-mobile-title {\n    font-size: 18px;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: 1.5;\n    letter-spacing: normal;\n    color: #2a4975;\n    font-weight: 600;\n  }\n  .le-floating-mobile-desc {\n    font-size: 12px;\n    font-stretch: normal;\n    font-style: normal;\n    line-height: 1.65;\n    letter-spacing: normal;\n    color: #2699fb;\n  }\n\n  /* // Tab popup */\n  .le-tab-popup {\n    position: fixed;\n    bottom: 15px;\n    left: 15px;\n    max-width: 150px;\n  }\n  .le-abs-outer-mobile-top-right-2 {\n    position: absolute;\n    right: -12px;\n    top: -15px;\n  }\n\n  .le-center-tab-popup {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 99999999 !important;\n    width: calc(100% - 40px);\n    max-width: 400px;\n  }\n\n  .le-center-tab-popup img {\n    max-width: 100% !important;\n  }\n\n  /* // Popup */\n  .le-checkbox-title {\n    font-size: 15px;\n    font-weight: bold;\n    font-stretch: normal;\n    font-style: normal;\n    color: #2a4975;\n    margin: 13px 0 !important;\n    /* line-height: 1.65 !important; */\n  }\n\n  /* Checkbox */\n  .lead-checkbox-container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    font-size: 14px;\n    line-height: 1.65;\n    margin: 10px 0;\n  }\n\n  .lead-checkbox-checkmark {\n    display: inline-block;\n    height: 24px;\n    border: solid 1px #d0d0d0;\n    vertical-align: middle;\n    margin-right: 8px;\n    position: relative;\n    border-radius: 4px;\n    flex: 0 0 24px;\n  }\n\n  .lead-checkbox-container input {\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    left: 0;\n  }\n\n  .lead-checkbox-checkmark::after {\n    position: absolute;\n    content: '';\n  }\n\n  .lead-checkbox-container input:checked ~ .lead-checkbox-checkmark {\n    background: #337eff;\n    border: solid 1px #337eff;\n  }\n\n  .lead-checkbox-container input:checked ~ .lead-checkbox-checkmark::after {\n    left: 8px;\n    top: 3px;\n    width: 7px;\n    height: 12px;\n    border: solid white;\n    border-width: 0 2px 2px 0;\n    transform: rotate(45deg);\n  }\n  /* End checkbox */\n\n  .le-fullscreen-img {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n\n  @media screen and (min-width: 768px) {\n    .lead-fullscreen-desktop-close-btn {\n      position: fixed;\n      top: 27px;\n      right: 23px;\n    }\n  }\n\n  /* // Inline */\n  .lead-modal.le-buider-inline {\n    position: static;\n    display: block;\n    padding: 20px 0;\n    height: initial !important;\n    padding-top: 10px;\n  }\n\n  .lead-modal.le-buider-inline .lead-modal__wrapper {\n    box-shadow: none;\n    border: 1px solid #ddd;\n  }\n  .lead-modal.le-buider-inline .lead-modal__content {\n    max-height: initial !important;\n  }\n  .lead-modal.le-buider-inline .lead-modal__content .lead-modal__header img {\n    /* height: auto !important; */\n    object-fit: fill;\n  }\n\n  .le-thankyou-title {\n    font-size: 24px !important;\n    margin-bottom: 8px !important;\n    color: #2a4975 !important;\n  }\n\n  .le-thankyou-subtitle {\n    font-size: 14px !important;\n    color: #2699fb !important;\n    margin: 0 !important;\n  }\n\n  /* Radio */\n  .lead-radio-container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    font-size: 14px;\n    line-height: 1.65;\n    margin: 10px 0;\n  }\n\n  .lead-radio-checkmark {\n    display: inline-block;\n    height: 24px;\n    border: solid 1px #d0d0d0;\n    vertical-align: middle;\n    margin-right: 8px;\n    position: relative;\n    border-radius: 50%;\n    flex: 0 0 24px;\n  }\n\n  .lead-radio-container input {\n    position: absolute;\n    opacity: 0;\n    top: 0;\n    left: 0;\n  }\n\n  .lead-radio-checkmark::after {\n    position: absolute;\n    content: '';\n  }\n\n  .lead-radio-container input:checked ~ .lead-radio-checkmark {\n    background: #337eff;\n    border: solid 1px #337eff;\n  }\n\n  .lead-radio-container input:checked ~ .lead-radio-checkmark::after {\n    left: 50%;\n    top: 50%;\n    width: 8px;\n    height: 8px;\n    background: #fff;\n    border-radius: 50%;\n    transform: translate(-50%, -50%);\n  }\n  /* End Radio */\n\n  /* Dropdown */\n  .le-newbuilder-select {\n    width: 100%;\n    padding: 12px;\n    border-radius: 4px;\n    border: solid 1px #d0d0d0;\n    outline: none;\n    appearance: none;\n    font-size: 15px;\n    padding-right: 35px;\n  }\n  .le-newbuilder-select-wrapper {\n    position: relative;\n  }\n  .le-newbuilder-select-wrapper::after {\n    content: '';\n    position: absolute;\n    right: 15px;\n    top: 18px;\n    transform: rotate(45deg);\n    width: 10px;\n    height: 10px;\n    border: 2px solid #616060;\n    border-left: transparent;\n    border-top: transparent;\n  }\n  /* End Dropdown */\n\n  .le-buider-slider {\n    width: 420px;\n    height: auto;\n    bottom: 15px;\n    top: unset;\n    left: -200px;\n    animation: le-builder-slide 0.5s forwards;\n  }\n\n  @keyframes le-builder-slide {\n    100% {\n      left: 15px;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    .le-buider-slider,\n    .le-buider-fullscreen {\n      display: none !important;\n    }\n  }\n\n  .le-skin-mobile {\n    margin-top: 64px;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport Icon from '../../../atoms/icons/Icon';\nimport { leadCss } from './leadCss';\nimport { leadParser } from './leadParser';\n\nexport type PropsLeadForm = {\n  // moduleStyle: Record<string, string>;\n  // computedStyle: Record<string, string>; // hideContentOnMobile\n  leadInfo: any;\n};\n\nconst StyledWrap = styled.div`\n  ${leadCss}\n`;\nconst StyledPlaceholder = styled.div`\n  background: #f3f3f3;\n  outline: 1px dashed #979797;\n  outline-offset: -2px;\n  display: inline-block;\n  color: #979894;\n  padding: 25px 0;\n  text-align: center;\n  width: 100%;\n\n  p {\n    font-size: 12px;\n    margin: 5px 0 0 0;\n  }\n`;\n\nfunction parseLeadToHTML(campaignShow: any) {\n  const VARS = {\n    LEAD_CLASS: 'custom-class',\n    LEAD_API: 'https://dev.leadgen.hellobacsi.com/',\n  };\n\n  try {\n    let {\n      // extra,\n      currentLayout,\n      listBlockAdded,\n      actionBlocks,\n      textBlocks,\n      // imageBlocks,\n      popupID,\n\n      LightBoxAImage,\n      LightBoxBDesktopImage,\n      LightBoxBMobileImage,\n\n      popUpTermURL,\n      popUpTermAgreeText,\n      popUpTermText,\n      popUpSubmitText,\n\n      blockCount,\n    } = leadParser.version2.getBlocksData(campaignShow);\n\n    let titleText = textBlocks.titleBlock.data.value;\n\n    // let popupHtml = ``;\n    const listFieldAddedHTML = leadParser.version2.getListFieldAdded({\n      listBlockAdded,\n      blockCount,\n      VARS,\n    });\n\n    if (\n      currentLayout.includes('LightBox') ||\n      currentLayout.includes('Inline') ||\n      currentLayout === 'Fullscreen' ||\n      currentLayout === 'Sidebar' ||\n      currentLayout === 'Slider'\n    ) {\n      let submitHTML = ``;\n\n      leadParser.version2.addCustomStyleForOverlay(campaignShow);\n\n      if (actionBlocks.submitBlock.isHide) {\n        submitHTML = leadParser.version2.genSubmitBlock({\n          LEAD_CLASS: VARS.LEAD_CLASS,\n          popUpTermURL,\n          popUpTermAgreeText,\n          popUpTermText,\n          popUpSubmitText,\n        });\n      }\n\n      return `${leadParser.version2.getContentPopupLightbox({\n        currentLayout,\n        LightBoxAImage,\n        LightBoxBDesktopImage,\n        LightBoxBMobileImage,\n        popupID,\n        textBlocks,\n        titleText,\n        submitHTML,\n        VARS,\n        listFieldAddedHTML,\n      })}`;\n    }\n\n    return '';\n  } catch (err) {\n    console.log('err', err);\n\n    return '';\n  }\n}\n\nfunction _LeadForm({ leadInfo }: PropsLeadForm) {\n  const html = leadInfo ? parseLeadToHTML(leadInfo.json) || '' : '';\n  const renderedForm = useMemo(() => {\n    return (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: html,\n        }}\n      />\n    );\n  }, [html]);\n\n  if (!leadInfo) {\n    return (\n      <StyledPlaceholder>\n        <Icon name=\"LeadForm\" />\n        <p>Select a Lead Form</p>\n      </StyledPlaceholder>\n    );\n  }\n\n  return <StyledWrap>{renderedForm}</StyledWrap>;\n}\n\nexport const LeadForm = React.memo(_LeadForm);\n","import React from 'react';\nimport { convertStyleToJsx } from '../../utils';\nimport styled from 'styled-components';\n\nexport type PropsSocial = {\n  moduleBlockStyle: Record<string, string>;\n  iconsList: any[];\n  computedStyle: Record<string, string>;\n};\n\nconst StyledIconsList = styled.div`\n  font-size: 0;\n\n  .icons-list--item {\n    display: inline-block;\n\n    a,\n    img {\n      display: block;\n    }\n  }\n`;\n\nexport function Social({ moduleBlockStyle, iconsList, computedStyle }: PropsSocial) {\n  const moduleBlockStyleJsx = convertStyleToJsx(moduleBlockStyle);\n\n  return (\n    <div style={moduleBlockStyleJsx}>\n      <StyledIconsList>\n        {iconsList.map((icon, idx) => {\n          return (\n            <div key={idx} className=\"icons-list--item\" style={{ padding: computedStyle.padding }}>\n              <a href={icon.image.href} title={icon.image.title} rel=\"noreferrer\" target=\"_blank\">\n                <img\n                  width={computedStyle.iconsDefaultWidth}\n                  height={computedStyle.iconsDefaultWidth}\n                  src={icon.image.src}\n                  alt={icon.image.alt}\n                />\n              </a>\n            </div>\n          );\n        })}\n      </StyledIconsList>\n    </div>\n  );\n}\n","import styled from 'styled-components';\nimport { ThemeProps } from '../../providers/theme';\nimport { StyledListActions as ListActions } from '../moduleItem/index.styled';\n\nexport const Container = styled.div`\n  width: 100%;\n  position: relative;\n  // min-height: 75px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    pointer-events: none;\n    outline: 2px solid transparent;\n    outline-offset: -2px;\n    z-index: 1;\n    transition: all 0.15s;\n  }\n\n  &.row--hovered,\n  &.row--selected {\n    &::before {\n      outline-color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n    }\n\n    .tcl-drag-column-start &,\n    .tcl-drag-control-start & {\n      outline-color: transparent !important;\n    }\n  }\n\n  &[data-hide-desktop='true'] .col-structure > div {\n    opacity: 0.5;\n    cursor: default;\n    filter: blur(1px);\n    z-index: 1;\n  }\n`;\n\nexport const StyledMove = styled.div`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  color: #fff;\n  transform: translateY(-50%);\n  background-color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  padding: 5px 8px 2px 8px;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  cursor: grab;\n  opacity: 0;\n  z-index: -1;\n  pointer-events: none;\n  transition: all 0.15s;\n\n  &.show {\n    opacity: 1;\n    z-index: 3;\n    pointer-events: auto;\n\n    .tcl-drag-column-start &,\n    .tcl-drag-control-start & {\n      z-index: -1;\n      opacity: 0;\n      pointer-events: none;\n    }\n  }\n`;\n\nexport const StyledRowContent = styled.div`\n  display: flex;\n  // width: 600px;\n  // max-width: 600px;\n  margin: auto;\n  // padding: 5px 0px;\n`;\n\nexport const StyledListActions = styled(ListActions)`\n  top: 10px;\n  right: 10px;\n  bottom: auto;\n`;\n\nexport const StyledHideOn = styled.div`\n  &.hide-desktop::before {\n    content: url(\"data:image/svg+xml,%3Csvg width='20' height='18' viewBox='0 0 20 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='20' height='18' /%3E%3Cpath d='M7.1525 4.9263H14.3357V10.7322L15.2176 11.4455C15.2189 11.427 15.2278 11.4124 15.2278 11.3939V4.5624C15.2278 4.25143 14.9852 4 14.6859 4H6.00635L7.07354 4.86146L7.1525 4.9263Z' fill='white'/%3E%3Cpath d='M15.8953 13.2007L4.6586 4.11698C4.5408 4.02236 4.37016 4.0442 4.27846 4.16726L4.05687 4.46302C3.96518 4.58542 3.98683 4.76208 4.10399 4.85802L15.3414 13.9404C15.4585 14.0364 15.6292 14.0139 15.7215 13.8915L15.9425 13.5957C16.0348 13.4726 16.0138 13.296 15.8953 13.2007Z' fill='white'/%3E%3Cpath d='M12.8007 13.096C12.746 13.0133 12.6708 12.9485 12.5772 12.9161C12.5314 12.8995 12.4836 12.8856 12.4327 12.8856H11.1617L10.8994 11.956H11.3903L10.2442 11.0304H5.66401V7.32782L4.77319 6.60728V11.3943C4.77319 11.7046 5.01452 11.956 5.31379 11.956H9.12157L8.83821 12.8856H7.56726C7.31701 12.8856 7.11325 13.0967 7.11325 13.3574C7.11325 13.6174 7.31701 13.8285 7.56726 13.8285H12.4327C12.6829 13.8285 12.8867 13.6174 12.8867 13.3574C12.8867 13.2581 12.8504 13.1721 12.8007 13.096Z' fill='white'/%3E%3C/svg%3E \");\n  }\n  &.hide-mobile::before {\n    content: url(\"data:image/svg+xml,%3Csvg width='20' height='18' viewBox='0 0 20 18' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='20' height='18' /%3E%3Cpath d='M7.35449 7.51275L12.0118 11.2775H12.0462L7.35449 7.48563V7.51275Z' fill='white'/%3E%3Cpath d='M7.35449 6.29735L12.576 10.518V10.4816L7.35449 6.26096V6.29735Z' fill='white'/%3E%3Cpath d='M15.8953 13.2007L13.468 11.2383L12.5765 10.5177L7.35502 6.2971L6.46354 5.57723L4.65894 4.11698C4.5405 4.02236 4.36985 4.0442 4.27879 4.16726L4.05656 4.46302C3.9655 4.58542 3.98651 4.76208 4.10432 4.85802L6.46354 6.76488L7.35502 7.48541L12.0467 11.278L13.468 12.4266L15.3414 13.9404C15.4592 14.0364 15.6292 14.0139 15.7215 13.8915L15.9425 13.5957C16.0348 13.4726 16.0138 13.296 15.8953 13.2007' fill='white'/%3E%3Cpath d='M7.35471 11.2778V8.70074L6.46387 7.98087V13.1741C6.46387 13.5883 6.78607 13.9244 7.18533 13.9244H12.7462C13.0092 13.9244 13.2295 13.7709 13.3556 13.5519L10.543 11.2778H7.35471Z' fill='white'/%3E%3Cpath d='M7.35523 4.9263H12.5767V9.29382L13.4688 10.0137V4.74964C13.4688 4.33545 13.1454 4 12.7467 4H7.18585C6.90313 4 6.66434 4.17269 6.5459 4.41882L7.35523 5.07319V4.9263Z' fill='white'/%3E%3C/svg%3E%0A\");\n  }\n  &::before {\n    left: 0;\n    top: -20px;\n    z-index: 1;\n    left: 0;\n    background-color: #2d87f3;\n    position: absolute;\n    height: 20px;\n  }\n`;\n","import React from 'react';\nimport cls from 'classnames';\nimport Icon from '../../atoms/icons/Icon';\nimport { Props } from './RowDraggable';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { ColStructure } from '../colStructure';\nimport { Container, StyledListActions, StyledMove, StyledRowContent, StyledHideOn } from './index.styled';\n\ntype PropsView = Props & {\n  index: number;\n  draggableId: string;\n  classes: string;\n  onClickWholeRow: (evt: any) => void;\n  onMouseEnter: (evt: any) => void;\n  onMouseLeave: (evt: any) => void;\n  containerStyle: Record<string, string>;\n  contentComputedStyled: Record<string, string>;\n  contentStyle: Record<string, string>;\n  rowData: any;\n  isHovered: boolean;\n  isSelected: boolean;\n  onConfirmDelete: () => void;\n  onConfirmClone: () => void;\n};\n\nfunction _RowDraggableView({\n  index, //\n  draggableId,\n  classes,\n  onClickWholeRow,\n  onMouseEnter,\n  onMouseLeave,\n  containerStyle,\n  contentComputedStyled,\n  contentStyle,\n  rowData,\n  isHovered,\n  isSelected,\n  onConfirmDelete,\n  onConfirmClone,\n}: PropsView) {\n  // console.log('rowdraggable view render', rowData.uuid);\n\n  return (\n    <Draggable key={draggableId} draggableId={draggableId} index={index}>\n      {(provided, snapshot) => {\n        return (\n          <div {...provided.draggableProps} ref={provided.innerRef}>\n            {/* \n              // @ts-ignore */}\n            <Container\n              // {...restProps}\n              className={classes} //\n              onClick={onClickWholeRow}\n              onMouseEnter={onMouseEnter}\n              onMouseLeave={onMouseLeave}\n              style={containerStyle}\n              data-hide-desktop={contentComputedStyled.hideContentOnDesktop}\n              data-hide-mobile={contentComputedStyled.hideContentOnMobile}\n            >\n              {/*\n                - Global Settings: messageWidth -> body.content.computedStyle.messageWidth\n              */}\n              <StyledRowContent\n                style={contentStyle} //\n                className=\"setting_messageWidth setting_messageBgColor setting_contentAlign\"\n              >\n                {rowData.columns.map((column: any, columnIdx: number) => {\n                  return (\n                    <ColStructure\n                      columnData={column} //\n                      key={column.uuid}\n                      rowId={rowData.uuid}\n                      rowIdx={index}\n                      columnIdx={columnIdx}\n                    />\n                  );\n                })}\n              </StyledRowContent>\n\n              <StyledMove\n                {...provided.dragHandleProps}\n                className={cls({\n                  show: isHovered || isSelected || snapshot.isDragging,\n                })}\n              >\n                <Icon name=\"Move\" />\n              </StyledMove>\n\n              {isSelected && (\n                <StyledListActions>\n                  <li onClick={onConfirmDelete}>\n                    <Icon name=\"Trash\" />\n                  </li>\n                  <li onClick={onConfirmClone}>\n                    <Icon name=\"Duplicate\" />\n                  </li>\n                </StyledListActions>\n              )}\n\n              {/* Icon - Row is hide on desktop or mobile */}\n              {isHovered && !isSelected && (\n                <StyledHideOn\n                  className={cls({\n                    'hide-desktop': String(contentComputedStyled.hideContentOnDesktop) === 'true',\n                    'hide-mobile': String(contentComputedStyled.hideContentOnMobile) === 'true',\n                  })}\n                />\n              )}\n            </Container>\n          </div>\n        );\n      }}\n    </Draggable>\n  );\n}\n\nconst RowDraggableView = React.memo(_RowDraggableView);\n\nexport { RowDraggableView };\n","import { ThemeProps } from 'components/providers/theme';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Icon from '../../atoms/icons/Icon';\n\nconst StyledText = styled.p`\n  font-size: 12px;\n  margin: 5px 0 0 0;\n  color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  text-align: center;\n  white-space: nowrap;\n  max-width: 100%;\n  padding: 0 5px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n\nconst StyledRowEmpty = styled.div`\n  height: 100%;\n  width: 100%;\n  min-height: 75px;\n  color: ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  outline: 1px dashed ${(props: ThemeProps) => props.theme.colors.primaryBase};\n  background: rgb(45 135 243 / 20%);\n  outline-offset: -1px;\n  word-break: break-word;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  lex-direction: column;\n  flex-direction: column;\n  position: relative;\n  border-radius: 4px;\n`;\n\nfunction RowEmpty() {\n  return (\n    <StyledRowEmpty>\n      <Icon name=\"UpCircleSolid\" />\n      <StyledText>Drop row blocks here</StyledText>\n    </StyledRowEmpty>\n  );\n}\n\nexport { RowEmpty };\n","import React from 'react';\nimport { WidgetSectionTitle } from '../../atoms/widgetSectionTitle';\nimport { Widget, WidgetPath, WidgetType } from '../../atoms/widgets';\nimport * as immutable from 'object-path-immutable';\nimport { useBuilderContext } from '../useBuilderContext';\nimport styled from 'styled-components';\nimport { StyledScrollBars } from '../index.styled';\n\nconst StyledSettingGlobalTab = styled.div`\n  padding-top: 16px;\n  height: 100%;\n  overflow: overlay;\n\n  ${StyledScrollBars}\n`;\n\nconst listGlobalWidgets: WidgetType[] = [\n  'ContentAreaWidth',\n  'ContentAreaAlign',\n  'BodyBackgroundColor',\n  'ContentAreaBgColor',\n  'BodyBgImage',\n  'ContentFontFamily',\n  'ContentLinkColor',\n];\n\nfunction SettingGlobalTab() {\n  const { builderData, onUpdateBodyStyle } = useBuilderContext();\n  const data = builderData.body;\n\n  return (\n    <StyledSettingGlobalTab>\n      <WidgetSectionTitle title=\"General Options\" />\n      {listGlobalWidgets.map((widgetKey) => {\n        const WidgetComp = Widget[widgetKey];\n        const pathObj = WidgetPath[widgetKey];\n        const valueFromPath = immutable.get(data, pathObj);\n\n        return WidgetComp ? (\n          <WidgetComp\n            key={widgetKey} //\n            value={valueFromPath}\n            name=\"\"\n            onChange={(path, value) => {\n              onUpdateBodyStyle({\n                path,\n                value,\n              });\n            }}\n          />\n        ) : null;\n      })}\n    </StyledSettingGlobalTab>\n  );\n}\n\nexport default SettingGlobalTab;\n"],"names":[],"sourceRoot":""}